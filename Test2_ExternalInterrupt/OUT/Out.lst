
OUT/Out.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000140  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000140  000001b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY
  4 .debug_info   000004e6  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000004a3  00000000  00000000  0000070a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000001a  00000000  00000000  00000bad  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000196  00000000  00000000  00000bc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_1>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__vector_2>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e4       	ldi	r30, 0x40	; 64
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 93 00 	call	0x126	; 0x126 <main>
  7a:	0c 94 9e 00 	jmp	0x13c	; 0x13c <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <InitInt0>:
  82:	8b b7       	in	r24, 0x3b	; 59
  84:	80 64       	ori	r24, 0x40	; 64
  86:	8b bf       	out	0x3b, r24	; 59
  88:	85 b7       	in	r24, 0x35	; 53
  8a:	83 60       	ori	r24, 0x03	; 3
  8c:	85 bf       	out	0x35, r24	; 53
  8e:	08 95       	ret

00000090 <__vector_1>:
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <ValoarePort>
  a2:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <ValoarePort+0x1>
  a6:	8f 3f       	cpi	r24, 0xFF	; 255
  a8:	91 05       	cpc	r25, r1
  aa:	39 f0       	breq	.+14     	; 0xba <__vector_1+0x2a>
  ac:	88 0f       	add	r24, r24
  ae:	99 1f       	adc	r25, r25
  b0:	01 96       	adiw	r24, 0x01	; 1
  b2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <ValoarePort+0x1>
  b6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <ValoarePort>
  ba:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <ValoarePort>
  be:	80 95       	com	r24
  c0:	85 bb       	out	0x15, r24	; 21
  c2:	9f 91       	pop	r25
  c4:	8f 91       	pop	r24
  c6:	0f 90       	pop	r0
  c8:	0f be       	out	0x3f, r0	; 63
  ca:	0f 90       	pop	r0
  cc:	1f 90       	pop	r1
  ce:	18 95       	reti

000000d0 <InitInt1>:
  d0:	8b b7       	in	r24, 0x3b	; 59
  d2:	80 68       	ori	r24, 0x80	; 128
  d4:	8b bf       	out	0x3b, r24	; 59
  d6:	85 b7       	in	r24, 0x35	; 53
  d8:	8c 60       	ori	r24, 0x0C	; 12
  da:	85 bf       	out	0x35, r24	; 53
  dc:	08 95       	ret

000000de <__vector_2>:
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	2f 93       	push	r18
  ea:	3f 93       	push	r19
  ec:	8f 93       	push	r24
  ee:	9f 93       	push	r25
  f0:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <ValoarePort>
  f4:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <ValoarePort+0x1>
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	31 09       	sbc	r19, r1
  fc:	c9 01       	movw	r24, r18
  fe:	99 23       	and	r25, r25
 100:	0c f4       	brge	.+2      	; 0x104 <__vector_2+0x26>
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	95 95       	asr	r25
 106:	87 95       	ror	r24
 108:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <ValoarePort>
 10c:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <ValoarePort+0x1>
 110:	80 95       	com	r24
 112:	85 bb       	out	0x15, r24	; 21
 114:	9f 91       	pop	r25
 116:	8f 91       	pop	r24
 118:	3f 91       	pop	r19
 11a:	2f 91       	pop	r18
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <main>:
 126:	11 ba       	out	0x11, r1	; 17
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	82 bb       	out	0x12, r24	; 18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	85 bb       	out	0x15, r24	; 21
 130:	0e 94 41 00 	call	0x82	; 0x82 <InitInt0>
 134:	0e 94 68 00 	call	0xd0	; 0xd0 <InitInt1>
 138:	78 94       	sei
 13a:	ff cf       	rjmp	.-2      	; 0x13a <main+0x14>

0000013c <_exit>:
 13c:	f8 94       	cli

0000013e <__stop_program>:
 13e:	ff cf       	rjmp	.-2      	; 0x13e <__stop_program>
